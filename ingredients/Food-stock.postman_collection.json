{
	"info": {
		"_postman_id": "f7a1853c-baf7-40bb-b3b9-80e5e718c57c",
		"name": "Food-stock",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Banaan\");",
							"    pm.expect(jsonData.stock).to.eql(100);",
							"    pm.collectionVariables.set(\"ingredientId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Banaan\",\n    \"stock\":100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/ingredient",
					"host": [
						"{{url}}"
					],
					"path": [
						"ingredient"
					]
				}
			},
			"response": []
		},
		{
			"name": "getIngredient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Banaan\");",
							"    pm.expect(jsonData.stock).to.eql(100);",
							"    pm.expect(jsonData.id).to.be.eql(pm.collectionVariables.get(\"ingredientId\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ingredient/{{ingredientId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"ingredient",
						"{{ingredientId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateStock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Banaan\");",
							"    pm.expect(jsonData.stock).to.eql(50);",
							"    pm.expect(jsonData.id).to.be.eql(pm.collectionVariables.get(\"ingredientId\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"stock\":50\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/ingredient/{{ingredientId}}/set-amount",
					"host": [
						"{{url}}"
					],
					"path": [
						"ingredient",
						"{{ingredientId}}",
						"set-amount"
					]
				}
			},
			"response": []
		},
		{
			"name": "getIngredient after set",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Banaan\");",
							"    pm.expect(jsonData.stock).to.eql(50);",
							"    pm.expect(jsonData.id).to.be.eql(pm.collectionVariables.get(\"ingredientId\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ingredient/{{ingredientId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"ingredient",
						"{{ingredientId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteIngredient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/ingredient/{{ingredientId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"ingredient",
						"{{ingredientId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetIngredient should 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ingredient/{{ingredientId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"ingredient",
						"{{ingredientId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:8082"
		},
		{
			"key": "ingredientId",
			"value": ""
		}
	]
}